{"version":3,"sources":["box-image1.png","SchedulePickup.js","serviceWorker.js","index.js"],"names":["module","exports","styles","firstSectionH","fontFamily","fontSize","display","alignItems","color","firstSectionSH","firstSectionRSH","firstSection","backgroundColor","boxShadow","borderRadius","padding","textAlign","paddingLeft","marginTop","mainContainer","margin","marginRight","secondSection","secondSectionBox1","height","background","arrowBox","position","marginLeft","secondSectionBox2","timeSlotBtn","SecondSectionH","dropBox","box","positive","backgroundSize","backgroundPosition","redText","marginBottom10","marginBottom","rightContainer","flexDirection","WhiteRadio","withStyles","root","checked","props","Radio","classes","Grid","className","Box","Typography","variant","container","item","xs","md","AccessTime","Button","CalendarToday","clsx","direction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.998e322a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/box-image1.7e097849.png\";","import { Grid, Typography, Button, Box, Radio } from '@material-ui/core';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AccessTime, CalendarToday } from '@material-ui/icons';\nimport clsx from  'clsx';\nimport box from './box-image1.png';\n\n//import CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport './App.css';\n\nconst styles = {\n  firstSectionH: {\n    fontFamily: 'Poppins',\n    fontSize: 24,\n    display: 'flex',\n    alignItems: 'center',\n    color: '#FFFEFE',\n  },\n  firstSectionSH: {\n    fontFamily: 'Poppins',\n    fontSize: 18,\n    display: 'flex',\n    alignItems: 'center',\n    color: '#FFFEFE',\n  },\n  firstSectionRSH: {\n    fontFamily: 'Poppins',\n    fontSize: 18,\n    color: '#FFFEFE',\n  },\n  firstSection: {\n    backgroundColor: '#79C440',\n    fontFamily: 'Poppins',\n    boxShadow: '2px 3px 10px rgba(0, 0, 0, 0.15)',\n    borderRadius: 15,\n    padding: 15,\n    alignItems: 'center',\n    textAlign: 'center',\n    paddingLeft:40,\n    marginTop:5,\n  },\n  mainContainer: {\n   margin:'20px 20px 20px 20px',\n   marginRight: 20,\n  },\n  secondSection: {\n   marginTop:10,\n   alignItems: 'center',\n   textAlign: 'center',\n  },\n  secondSectionBox1: {\n    height: 400,\n    background: '#79C440',\n    boxShadow: '2px 3px 10px rgba(0, 0, 0, 0.15)',\n    borderRadius: 15,\n  },\n  arrowBox: {\n    position: 'relative',\n    marginTop:250,\n    marginLeft:300,\n  },\n  secondSectionBox2: {\n    height: 400,\n    background: '#79C440',\n    boxShadow: '2px 3px 10px rgba(0, 0, 0, 0.15)',\n    borderRadius: '15px 15px 250px 15px',\n    marginLeft: 10,\n  },\n  timeSlotBtn: {\n    background: '#FFFFFF',\n    borderRadius: 10,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  SecondSectionH: {\n    fontFamily:'Poppins',\n    fontSize: 24,\n    color: '#515151',\n    marginTop:70,\n  },\n  dropBox: {\n    borderRadius: '7px 7px 15px 15px',\n    height: '100%',\n    background: `url(${box})`,\n    positive: 'relative',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    marginTop:5,\n  },\n  redText: {\n    color: '#FF0000',\n  },\n  marginBottom10: {\n    marginBottom: 10,\n  },\n  rightContainer: {\n    flexDirection: 'column',\n    display: 'flex',\n    alignItems: 'center',\n  }\n};\n\nconst WhiteRadio = withStyles({\n  root: {\n    color: 'white',\n    '&$checked': {\n      color: 'white',\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst SchedulePickup = (props) => {\n  const { classes } = props;\n  return(<Grid className={classes.mainContainer}><Box className={classes.SecondSectionH}><Typography variant='p' className={classes.SecondSectionH}>\n  Schedule your pick up...\n  </Typography></Box><Grid container className={classes.firstSection}>\n    <Grid item xs={8} md={8}>\n    <Typography variant='p' className={classes.firstSectionH}>\n              Schedule Now\n    </Typography>\n            <Typography variant='p' className={classes.firstSectionSH}>\n            Pickup within one hour\n      </Typography>\n    </Grid>\n    <Grid item xs={4} md={4} className={classes.rightContainer}>\n    <AccessTime fontSize=\"large\"  />\n    <Typography variant='p' className={classes.firstSectionRSH}>\n            Choose Time\n      </Typography>\n    </Grid>\n    </Grid>\n    <Grid container className={classes.firstSection}>\n    <Grid item xs={8} md={8}>\n    <Typography variant='p' className={classes.firstSectionH}>\n    Schedule Later\n    </Typography>\n           <Button className={classes.timeSlotBtn}>Select time slot</Button>\n    </Grid>\n    <Grid item xs={4} md={4} className={classes.rightContainer}>\n    <CalendarToday fontSize=\"large\"  />\n    <Typography variant='p' className={classes.firstSectionRSH}>\n            Choose Date\n      </Typography>\n    </Grid>\n    </Grid>\n    <Grid container className={classes.firstSection}>\n    <Grid item xs={8} md={8}>\n    <Typography variant='p' className={classes.firstSectionH}>\n    What do you wish to send...\n    </Typography>\n           <Button className={clsx(classes.timeSlotBtn, classes.marginBottom10)}>Product Category</Button>\n    </Grid>\n    </Grid>\n    <Box className={classes.SecondSectionH}><Typography variant='p' className={classes.SecondSectionH}>\n    Confirm the following...\n    </Typography></Box>\n    <Grid container direction=\"row\" className={classes.secondSection}>\n    \n   \n    <Grid item xs={6} md={6} className={classes.secondSectionBox1}>\n    <Typography variant='p' className={classes.firstSectionSH}>\n    <WhiteRadio checked />Upload Image\n    </Typography>\n    <Box className={classes.dropBox}></Box>\n    </Grid>\n    <Grid item xs={5} md={5} className={classes.secondSectionBox2}>\n    <Typography variant='p' className={classes.firstSectionSH}>\n    <WhiteRadio checked />Package is securely sealed\n    </Typography>\n    <Typography variant='p' className={classes.firstSectionSH}>\n    <WhiteRadio checked />Package weight is > 2 Kgs\n    </Typography>\n    <Typography variant='p' className={classes.firstSectionSH}>\n    <WhiteRadio checked />Package size does not exceed 1.5 feet on any side\n    </Typography>\n    <Typography variant='p' className={clsx(classes.firstSectionSH, classes.redText)}>\n    <WhiteRadio checked />No Restricted Items\n    </Typography>\n    {/* <Box className={classes.arrowBox}><img src={arrow} /></Box> */}\n    </Grid>\n    </Grid>\n    </Grid>);\n}\n\nexport default withStyles(styles)(SchedulePickup);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SchedulePickup from './SchedulePickup';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SchedulePickup />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}